[core]
    excludesfile = ~/.config/git/ignore
    editor = "$EDITOR"
    pager = "$PAGER -+C -F"
    fileMode = false
    hooksPath = ~/.config/git/hooks

[init]
    defaultBranch = master    

[push]
    default = current

[pull]
    rebase = false

[color]
    status = auto
    diff = auto
    branch = auto
    interactive = auto
    grep = auto
    ui = auto

[advice]
    addEmptyPathspec = false

[alias]
    a = "!git ls-files --exclude-standard -m --others -t | fzf | cut -d' ' -f2 | xargs git add"
    d = diff
    ds = diff --staged
    dno = diff --name-only
    co = checkout
    ci = commit
    ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
    pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
    st = status
    br = branch
    bm = branch --merged
    bn = branch --no-merged
    hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn](%G?) %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --color=always
    history = hist --all
    hs = hist -n 10
    last = log -1 HEAD
    today = hist --since=midnight
    df = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative | fzf | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
    type = cat-file -t
    dump = cat-file -p
    unstage = "reset HEAD --"

    # edit conflicted file on merge
    edit-unmerged = "!$EDITOR $(git ls-files --unmerged | cut -f2 | sort -u)"

    # add conflicted file on merge
    add-unmerged = "!git add $(git ls-files --unmerged | cut -f2 | sort -u)"

[github]
    user = "thek4n"
    email = "thek4n@yandex.ru"

[user]
    name = "thek4n"
    email = "thek4n@yandex.ru"
    signingkey = "thek4n"
